{"ast":null,"code":"var _jsxFileName = \"F:\\\\sharp\\\\React task\\\\authentication-react\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const emailRef = useRef();\n  const passRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n  const [loading, setloading] = useState(false);\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailRef.current.value;\n    const enteredPass = passRef.current.value;\n    setloading(true);\n    if (isLogin) {} else {\n      fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCvZa-5u7cUh93_CV9xqh5JzLRSkdD9VFk\", {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPass,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        setloading(false);\n        if (res.ok) {} else {\n          return res.json().then(data => {\n            console.log(data);\n            let errorMessage = 'Authentication failed';\n            if (!data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n            alert(errorMessage);\n          });\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!loading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 23\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"igz+eIuEkTf2v43sp4i5Nft75gk=\");\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useRef","useState","classes","AuthForm","emailRef","passRef","isLogin","setIsLogin","loading","setloading","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPass","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","console","log","errorMessage","error","message","alert","auth","control","actions","toggle"],"sources":["F:/sharp/React task/authentication-react/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useRef, useState } from 'react';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const emailRef = useRef();\n  const passRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n  const [loading,setloading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) =>{\n    event.preventDefault();\n\n    const enteredEmail = emailRef.current.value;\n    const enteredPass = passRef.current.value;\n\n    setloading(true);\n    if(isLogin){\n\n    }else{\n       fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCvZa-5u7cUh93_CV9xqh5JzLRSkdD9VFk\",{\n        method: 'POST',\n        body:JSON.stringify({\n          email:enteredEmail,\n          password:enteredPass,\n          returnSecureToken: true\n        }),\n        headers:{\n          'Content-Type': 'application/json',\n        }\n       }).then(res =>{\n        setloading(false)\n        if(res.ok){\n          \n        }else{\n          return res.json().then((data)=>{\n            console.log(data)\n            let errorMessage = 'Authentication failed';\n            if(!data && data.error && data.error.message){\n              errorMessage = data.error.message;\n            }\n            alert(errorMessage);\n             \n          })\n        }\n       })\n    }\n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={passRef} />\n        </div>\n        <div className={classes.actions}>\n       { !loading &&  <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n       {  loading && <p>Loading...</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}